---
title: "Introduction"
format: html
---

At its core, machine learning is primarily interested in making sense of complex data. A machine learning algorithm's job is to read data and identify patterns that can be used for: prediction, feature-relevance detection, model-free classification, among other actions.

## About this course

**Please watch our Welcome video to meet the organisers and hear from Alex Hunns about the dynamics of the course.In case you do not make it until the end, here are some highlights:**

-   It is a (mostly) self-paced and fully online course.

-   We provide a non-exhaustive way to go about using the R and Python languages for basic Machine Learning purposes. Some of you may be able to optimise a few lines of code, and we encourage that!

-   There are social hours in gather.town. Join so that you can meet other Machine Learners around the globe!

-   There are no grades to this course. If you attend the Collaborative Policy Event, you may be eligible for some form of certification.

-   The content is introductory.

-   Be respectful and kind to other participants!

{{< video https://youtu.be/sILhz3dqfqM?si=ni7aYqoJ9VXUQyN0 >}}

## A general introduction to Machine learning for Public Policy

Empirical Public Policy research is primarily concerned with causality and understanding counterfactuals. What is the impact of Policy or Programme X on Population Outcome Y? What would have happened in the absence of such a policy? However, there are policy problems that may be solved without necessarily looking for a causal link. We call these \`prediction policy problems' ([Kleinberg et al. 2015](https://www.aeaweb.org/articles?id=10.1257/aer.p20151023)). Some examples include:

-   Allocating fire and health inspectors in cities ([Glaeser et al. 2016](https://www.aeaweb.org/articles?id=10.1257/aer.p20161027)).

-   Predicting unemployment spell length to help workers decide on savings rates and job search strategies.

-   Predicting highest risk youth for targeting interventions ([Chandler,Levitt, and List 2011](https://www.aeaweb.org/articles?id=10.1257/aer.101.3.288)).

### How does a Machine Learn?

Machine learning is classified in three major branches:

**1. Supervised Learning**:

This course will be primarily concerned with supervised learning. Supervised learning is analogous to statistical learning: suppose that we observe a quantitative response $Y$ and $p$ predictors, $X_1, X_2,..., X_p$.

We can rewrite this in a general linear form as:

$$Y = f(X) + u$$ where $u$ is an error term.

**2. Unsupervised Learning**:

Unsupervised learning is known for reading data without labels; it is more computationally complex than supervised learning (because it will look for all possible patterns in the data), but it is also more flexible than supervised learning. You can think of clustering, anomaly detection, neural networks, etc.

**3. Reinforcement Learning**:

Reinforcement learning is categorised as Artificial Intelligence. It is more focused on goal-directed learning from interaction than are other approaches to machine learning. As per [Sutton and Barto (2015)](https://web.stanford.edu/class/psych209/Readings/SuttonBartoIPRLBook2ndEd.pdf), the three most distinguishing features of reinforcement learning are:

1.  Being closed-loop; i.e. the learning system's actions influence its later inputs.

2.  Does not have direct instructions as to what actions to take; instead it must discover which actions yield the most reward by trying them out.

3.  Not knowing where the consequences of actions, including reward signals, play out over extended time periods.

![](assets/sup_unsup_re.png){fig-align="center"}

**Relevant trade-offs in Machine Learning**

-   Flexibility vs. interpretability: not all found patterns are directly interpretable.

-   Prediction vs. inference: high predictive power does not allow for proper inference.

-   Goodness-of-fit vs. over-fitting: how do we know *when* the fit is good?

## Next steps

Now is time to start programming! Choose between R and Python to follow the course. We have prepared an introduction, so you can get started:

[An introduction to R programming](r-intro.qmd)

[An introduction to Python programming](python-intro.qmd)
