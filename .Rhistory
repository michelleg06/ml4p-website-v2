install.packages("sandwich")
install.packages("elasticnet")
setwd("/Users/lucas/Documents/UNU-CDO/courses/policy brief")
library(haven)
library(tidyverse)
library(stringdist)
data <- read_sav("Policy Brief Writing_February 26, 2025_11.18.sav", encoding = "UTF-8")
#rename important columns
data <- data %>% rename(
first_name = Q1_1,
last_name = Q1_2,
email = Q2_2,
gender = Q4,
age = Q19_1,
university = Q_1,
study_level = Q5,
programme = Q6_1,
study_level_other = Q5_9_TEXT,
nationality = Q3,
group_time = Q8,
brief_title = Q9
)
data$gender <- as_factor(data$gender)
data$nationality <- as_factor(data$nationality)
data$group_time <- as_factor(data$programming_skills)
data$group_time <- as_factor(data$group_time)
data$group_time <- as_factor(data$group_time)
# Remove incomplete applications
data <- data %>%
filter(Progress == 100)
data <- data %>%
distinct(email, .keep_all = TRUE)
setwd("/Users/lucas/Documents/UNU-CDO/courses/policy brief")
library(haven)
library(tidyverse)
library(stringdist)
data <- read_sav("Policy Brief Writing_February 26, 2025_11.18.sav", encoding = "UTF-8")
#rename important columns
data <- data %>% rename(
first_name = Q1_1,
last_name = Q1_2,
email = Q2_2,
gender = Q4,
age = Q19_1,
university = Q_1,
study_level = Q5,
programme = Q6_1,
study_level_other = Q5_9_TEXT,
nationality = Q3,
group_time = Q8,
brief_title = Q9
)
data$gender <- as_factor(data$gender)
data$nationality <- as_factor(data$nationality)
data$group_time <- as_factor(data$group_time)
# Remove incomplete applications
data <- data %>%
filter(Progress == 100)
# Duplicates
duplicates_df <- your_dataset %>%
group_by(your_variable) %>%
filter(n() > 1) %>%
ungroup()
# Duplicates
duplicates_df <- data %>%
group_by(email) %>%
filter(n() > 1) %>%
ungroup()
View(duplicates_df)
data <- data %>%
distinct(email, .keep_all = TRUE)
View(data)
View(data)
data <- data %>%
distinct(email, .keep_all = TRUE)
eu_countries <- c(
"Austria", "Belgium", "Bulgaria", "Croatia", "Cyprus",
"Czech Republic", "Denmark", "Estonia", "Finland", "France",
"Germany", "Greece", "Hungary", "Ireland", "Italy",
"Latvia", "Lithuania", "Luxembourg", "Malta", "Netherlands",
"Poland", "Portugal", "Romania", "Slovakia", "Slovenia",
"Spain", "Sweden", "United Kingdom"
)
# print sorted nationalities by freq.
sorted_table <- sort(table(data$nationality, useNA = "ifany"), decreasing = TRUE)
print(sorted_table)
#EU and non EU
data <- data %>%
mutate(eu = ifelse(nationality %in% eu_countries, 1, 0))
table(data$eu)
###### Eligible students
data$study_level <- as_factor(data$study_level)
table(data$study_level)
eligible_students <- data
### Maastricht uni
maas_uni_mapping <- c("maastricht", "maastricht university", "unu-merit", "unu merit")
eligible_students <- eligible_students %>%
mutate(university = tolower(university)) %>%
rowwise() %>%
mutate(maastricht_uni = any(str_detect(university, maas_uni_mapping))) %>%
ungroup()
table(eligible_students$maastricht_uni)
View(eligible_students)
eligible_students <- eligible_students %>%
mutate(university = tolower(university)) %>%
rowwise() %>%
mutate(maastricht_uni = any(str_detect(university, maas_uni_mapping)) | str_detect(email, "maastricht")) %>%
ungroup()
table(eligible_students$maastricht_uni)
####MPP
mpp_mapping <- c("mpp", "public policy", "pubic policy")
# mpp == 1 if maastricht && programme name matches mapping
eligible_students <- eligible_students %>%
mutate(programme = tolower(programme)) %>%
rowwise() %>%
mutate(mpp = if_else(maastricht_uni == 1,
any(str_detect(programme, mpp_mapping)),
FALSE)) %>%
ungroup()
table(eligible_students$mpp)
# print sorted nationalities by freq.
sorted_nationalities <- sort(table(eligible_students$nationality, useNA = "ifany"), decreasing = TRUE)
print(sorted_nationalities)
# Gender
eligible_students$gender <- as_factor(eligible_students$gender)
table(eligible_students$gender)
# Master EU
table(eligible_students$eu)
