{
  "hash": "abe2bf73247a4b4c2678481d6f0d169e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Prediction Policy Problems: Linear Models and Lasso Regression\"\nformat: html\n---\n\n\n\n\n## Introducing the Prediction Policy Framework\n\nIn the video-lecture below you'll be given a brief introduction to the prediction policy framework, and a primer on machine learning. Please take a moment to watch the 20 minute video.\n\n\n\n\n{{< video https://youtu.be/sFbKe4O0tEQ >}}\n\n\n\n\n\n\nAre you still wondering what the difference is between Machine Learning and Econometrics? Take a few minutes to watch the video below. \n\n\n\n\n{{< video https://youtu.be/gx_MBxMu0m4 >}}\n\n\n\n\n\n\nAfter watching the videos, we have a practical exercise.\n\n### Predicting social assistance beneficiaries \n\nA key problem in the design of Social Policies is the identification of people in need of social assistance.\nSocial policies usually work with tight budgets and limited fiscal space. To allocate resources efficiently, benefits need to be targeted to those who need them most. Yet, identifying needs isnâ€™t easy and misclassifications can have severe and irreversible effects on people in need.\n\nThink of a social protection programme that allocates food vouchers to families with children at risk of malnutrition, or a programme that establishes needs-based school grants. What happens when these limited and finite resources are given to people that could do without, and those who need them most are excluded from them?\n\nIn this block we'll work with real-world data from the country of Malawi to predict cash-transfer programme beneficiaries: People who live in poverty and need government assistance to make ends meet. The data comes from McBride and Nichol's (2018) paper [Retooling poverty targeting using out-of-sample validation and machine learning](https://elibrary.worldbank.org/doi/abs/10.1093/wber/lhw056).\n\n**Discussion Points**\n\nThe points below are meant to help you think critically about why we're about to embark on a machine learning - targeting exercise.\n<br>\n\n<ul>\n<li> Why is this a prediction policy problem? What would be a causal inference problem in this setting? Is it a regression or a classification problem? </li>\n<li> Which variables and characteristics that we include in the prediction model can make a big difference?\n    <ul>\n    <li>Programmatically and conceptually, which type of characteristics do we want to consider for the prediction model?</li>\n    <li>Technically, how do we select which variables to include in a prediction model? How is this different from a causal inference problem?</li>\n    </ul>\n</li>    \n<li> What are the practical implications of the bias-variance tradeoff in this application? </li>\n<li> What are potential risks of such a data driven targeting approach? </li>\n</ul>\n\n<br>\n\n**If you'd like to learn more about Social Protection Policies, take a look at this video Alex has made for us with a brilliant summary of the field**\n\n(Yes, more videos!)\n\n\n\n\n{{< video https://youtu.be/Pn9DntDejKU >}}\n\n\n\n\n\n\n## R Practical\n\nYou can download the dataset by clicking on the button below.\n\n<button type=\"button\" class=\"btn btn-primary\" download=\"https://github.com/michelleg06/Machine-Learning-for-Public-Policy/blob/main/malawi.csv\">Download Malawi.csv</button>\n<br>\n\nThe script below is a step by step on how to go about coding a predictive model using a *linear regression*. Despite its simplicity and transparency, i.e. the ease with which we can interpret its results, a linear model is not without challenges in machine learning.\n\n\n### 1. Preliminaries: working directory, libraries, data upload\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrm(list = ls()) # this line cleans your Global Environment.\nsetwd(\"/Users/lucas/Documents/UNU-CDO/courses/ml4p/ml4p-website-v2/data\") # set your working directory\n\n# Libraries\n\n# If this is your first time using R, you need to install the libraries before loading them. \n# To do that, you can uncomment the line that starts with install.packages(...) by removing the # symbol.    \n\n#install.packages(\"dplyr\", \"tidyverse\", \"caret\", \"corrplot\", \"Hmisc\", \"modelsummary\", \"plyr\", \"gt\", \"stargazer\", elasticnet\")\n\nlibrary(dplyr) # core package for dataframe manipulation. Usually installed and loaded with the tidyverse, but sometimes needs to be loaded in conjunction to avoid warnings.\nlibrary(tidyverse) # a large collection of packages for data manipulation and visualisation.  \nlibrary(caret) # a package with key functions that streamline the process for predictive modelling \nlibrary(corrplot) # a package to plot correlation matrices\nlibrary(Hmisc) # a package for general-purpose data analysis \nlibrary(modelsummary) # a package to describe model outputs\nlibrary(skimr) # a package to describe dataframes\nlibrary(plyr) # a package for data wrangling\nlibrary(gt) # a package to edit modelsummary (and other) tables\nlibrary(stargazer) # a package to visualise model output\n\ndata_malawi <- read_csv(\"malawi.csv\") # the file is directly read from the working directory/folder previously set\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}